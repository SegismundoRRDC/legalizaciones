-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.account
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    name character varying(3) COLLATE pg_catalog."default",
    detail character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT account_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.approval
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    detail character varying(50) COLLATE pg_catalog."default",
    expenses_id character varying(10) COLLATE pg_catalog."default",
    employee_id_number character varying(10) COLLATE pg_catalog."default",
    CONSTRAINT approval_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.city
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    name character varying(45) COLLATE pg_catalog."default",
    CONSTRAINT city_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.concept
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    name character varying(35) COLLATE pg_catalog."default",
    CONSTRAINT concept_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cost_center
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    detail character varying(7) COLLATE pg_catalog."default",
    CONSTRAINT cost_center_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.country
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    name character varying(45) COLLATE pg_catalog."default",
    CONSTRAINT country_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.currency
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    detail character varying(25) COLLATE pg_catalog."default",
    CONSTRAINT currency_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.employee
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    id_type character varying(2) COLLATE pg_catalog."default",
    first_name character varying(10) COLLATE pg_catalog."default",
    second_name character varying(10) COLLATE pg_catalog."default",
    first_last_name character varying(10) COLLATE pg_catalog."default",
    second_last_name character varying(10) COLLATE pg_catalog."default",
    born_date date,
    email character varying(60) COLLATE pg_catalog."default",
    phone character varying(13) COLLATE pg_catalog."default",
    address character varying(50) COLLATE pg_catalog."default",
    building_name character varying(20) COLLATE pg_catalog."default",
    neighborhood character varying(22) COLLATE pg_catalog."default",
    city character varying(15) COLLATE pg_catalog."default",
    country character varying(15) COLLATE pg_catalog."default",
    role character varying(40) COLLATE pg_catalog."default",
    password character varying(15) COLLATE pg_catalog."default",
    status integer,
    register_date date,
    role_id integer,
    CONSTRAINT employee_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.expense
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    expense_date date,
    identification character varying(10) COLLATE pg_catalog."default",
    register_date date,
    item integer,
    concept character varying(20) COLLATE pg_catalog."default",
    pay_method_id integer,
    detail character varying(100) COLLATE pg_catalog."default",
    value double precision,
    total double precision,
    status character varying(10) COLLATE pg_catalog."default",
    cost_center_id integer,
    concept_id integer,
    account_id integer,
    country_id integer,
    currency_id integer,
    CONSTRAINT expense_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.id_type
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    description character varying(10) COLLATE pg_catalog."default",
    CONSTRAINT id_type_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.pay_method
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    detail character varying(2) COLLATE pg_catalog."default",
    CONSTRAINT pay_method_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.role
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    description character varying(40) COLLATE pg_catalog."default",
    CONSTRAINT role_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.status
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    detail character varying(8) COLLATE pg_catalog."default",
    CONSTRAINT status_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.country
    ADD CONSTRAINT country_id_fkey FOREIGN KEY (id)
    REFERENCES public.city (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS country_pkey
    ON public.country(id);


ALTER TABLE IF EXISTS public.employee
    ADD CONSTRAINT employee_id_fkey FOREIGN KEY (id)
    REFERENCES public.id_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS employee_pkey
    ON public.employee(id);


ALTER TABLE IF EXISTS public.employee
    ADD CONSTRAINT employee_id_fkey1 FOREIGN KEY (id)
    REFERENCES public.role (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS employee_pkey
    ON public.employee(id);


ALTER TABLE IF EXISTS public.employee
    ADD CONSTRAINT employee_id_fkey2 FOREIGN KEY (id)
    REFERENCES public.approval (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS employee_pkey
    ON public.employee(id);


ALTER TABLE IF EXISTS public.expense
    ADD CONSTRAINT expense_id_fkey FOREIGN KEY (id)
    REFERENCES public.pay_method (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS expense_pkey
    ON public.expense(id);


ALTER TABLE IF EXISTS public.expense
    ADD CONSTRAINT expense_id_fkey1 FOREIGN KEY (id)
    REFERENCES public.account (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS expense_pkey
    ON public.expense(id);


ALTER TABLE IF EXISTS public.expense
    ADD CONSTRAINT expense_id_fkey2 FOREIGN KEY (id)
    REFERENCES public.country (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS expense_pkey
    ON public.expense(id);


ALTER TABLE IF EXISTS public.expense
    ADD CONSTRAINT expense_id_fkey3 FOREIGN KEY (id)
    REFERENCES public.concept (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS expense_pkey
    ON public.expense(id);


ALTER TABLE IF EXISTS public.expense
    ADD CONSTRAINT expense_id_fkey4 FOREIGN KEY (id)
    REFERENCES public.cost_center (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS expense_pkey
    ON public.expense(id);


ALTER TABLE IF EXISTS public.expense
    ADD CONSTRAINT expense_id_fkey5 FOREIGN KEY (id)
    REFERENCES public.currency (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS expense_pkey
    ON public.expense(id);


ALTER TABLE IF EXISTS public.expense
    ADD CONSTRAINT expense_id_fkey6 FOREIGN KEY (id)
    REFERENCES public.status (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS expense_pkey
    ON public.expense(id);


ALTER TABLE IF EXISTS public.expense
    ADD CONSTRAINT expense_id_fkey7 FOREIGN KEY (id)
    REFERENCES public.approval (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS expense_pkey
    ON public.expense(id);

END;